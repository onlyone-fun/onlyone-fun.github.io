import{_ as t}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as o,o as d,a as e}from"./app-DnN-PdMh.js";const r={},u=e('<h1 id="cron表达式" tabindex="-1"><a class="header-anchor" href="#cron表达式"><span>cron表达式</span></a></h1><blockquote><p>由若干数字、空格、符号按一定的规则，组成的一组字符串，从而表达时间的信息</p></blockquote><h2 id="格式" tabindex="-1"><a class="header-anchor" href="#格式"><span>格式</span></a></h2><ul><li><code>秒 分 小时 日期 月份 星期</code></li><li><code>秒 分 小时 日期 月份 星期 年(可为空)</code></li></ul><h2 id="工具" tabindex="-1"><a class="header-anchor" href="#工具"><span>工具</span></a></h2><p><code>Cron</code> 表达式主要有两类，分别是：</p><ul><li><p>Linux crontab 命令 （Crontab 是linux系统自带的定时任务，用于设置周期性执行的本地脚本。Crontab的cron表达式只能精确到分钟。例如，* * * * ?）</p></li><li><p>Java Quartz（Quartz 是一个完全由 Java 编写的开源作业调度框架，为 Java 应用进行任务调度提供了简单却强大的机制。Quartz的cron表达式可以精确到秒。例如，* * * * * ?）</p></li></ul><h2 id="域取值" tabindex="-1"><a class="header-anchor" href="#域取值"><span>域取值</span></a></h2><table><thead><tr><th><strong>域</strong></th><th><strong>是否必需</strong></th><th><strong>取值范围</strong></th><th><strong>特殊字符</strong></th></tr></thead><tbody><tr><td>秒</td><td>是</td><td>[0, 59]</td><td>* , - /</td></tr><tr><td>分钟</td><td>是</td><td>[0, 59]</td><td>* , - /</td></tr><tr><td>小时</td><td>是</td><td>[0, 23]</td><td>* , - /</td></tr><tr><td>日期</td><td>是</td><td>[1, 31]</td><td>* , - / ? L W C</td></tr><tr><td>月份</td><td>是</td><td>[1, 12]</td><td>* , - /</td></tr><tr><td>星期</td><td>是</td><td>[1, 7] 其中 1 表示星期一，7 表示星期日。</td><td>* , - / ? L C #</td></tr><tr><td>年</td><td>否</td><td>留空，1970~2099</td><td>, - * /</td></tr></tbody></table><h2 id="特殊字符" tabindex="-1"><a class="header-anchor" href="#特殊字符"><span>特殊字符</span></a></h2><blockquote><p>Cron 表达式中的每个域都支持一定数量的特殊字符，每个特殊字符有其特殊含义</p></blockquote><table><thead><tr><th><strong>特殊字符</strong></th><th><strong>含义</strong></th><th><strong>示例</strong></th></tr></thead><tbody><tr><td>*</td><td>所有可能的值</td><td>在<strong>月份域</strong>中，* 表示每个月；在星期域中，* 表示星期的每一天。</td></tr><tr><td>,</td><td>列出枚举值</td><td>在<strong>分钟域</strong>中，5,20 表示分别在 5 分钟和 20 分钟触发一次。</td></tr><tr><td>-</td><td>范围</td><td>在<strong>分钟域</strong>中，5-20 表示从 5 分钟到 20 分钟之间每隔一分钟触发一次。</td></tr><tr><td>/</td><td>表示起始时间开始触发，然后每隔固定时间触发一次</td><td>在<strong>分钟域</strong>中，0/15 表示从第 0 分钟开始，每 15 分钟触发一次。在分钟域中3/20表示从第 3 分钟开始，每 20 分钟触发一次。</td></tr><tr><td>?</td><td>不指定值，仅日期和星期域支持该字符</td><td>当日期或星期域其中之一被指定了值以后，为了避免冲突，需要将另一个域的值设为?。</td></tr><tr><td>L</td><td>单词 Last 的首字母，表示最后一天，仅日期和星期域支持该字符</td><td>在<strong>日期域</strong>中，L 表示某个月的最后一天。在星期域中，L 表示一个星期的最后一天，也就是星期日（SUN）。如果在 L 前有具体的内容，例如，在星期域中的 6L，表示这个月的最后一个星期六。</td></tr><tr><td>W</td><td>表示有效工作日（周一到周五），只能出现在<strong>日期域</strong>，系统将在离指定日期最近的有效工作日触发事件。W 字符寻找当前月份中最近有效工作日，连用字符 LW 时表示为指定月份的最后一个工作日。</td><td>在<strong>日期域</strong>中使用 5W， 如果 5 号是星期六，则将在最近的工作日星期五，即 4 日触发。如果 5 日是星期天，则将在最近的工作日星期一，即 6 日触发；如果 5 日在星期一到星期五中的一天，则就在 5 日触发。</td></tr><tr><td>#</td><td>确定每个月第几个星期几，仅<strong>星期域</strong>支持该字符。</td><td>在<strong>星期域</strong>中，4#2表示某月的第二个星期四。</td></tr><tr><td>C</td><td>这个字符依靠一个指定的“日历”。也就是说这个表达式的值依赖于相关的“日历”的计算结果，如果没有“日历”关联，则等价于所有包含的“日历”。仅日期和星期域支持该字符。</td><td><strong>日期域</strong>是“5C”表示关联“日历”中第一天，或者这个月开始的第一天的后5天。<strong>星期域</strong>是“1C”表示关联“日历”中第一天，或者星期的第一天的后1天，也就是周日的后一天（周一）。</td></tr></tbody></table><h2 id="秒" tabindex="-1"><a class="header-anchor" href="#秒"><span>秒</span></a></h2><p>允许值范围: 0~59 ,不允许为空值，若值不合法，调度器将抛出<code>SchedulerException</code>异常</p><ul><li><p>&quot;*&quot; 代表每隔1秒钟触发</p></li><li><p>&quot;,&quot; 代表在指定的秒数触发，比如&quot;0,15,45&quot;代表0秒、15秒和45秒时触发任务</p></li><li><p>&quot;-&quot; 代表在指定的范围内触发，比如&quot;25-45&quot;代表从25秒开始触发到45秒结束触发，每隔1秒触发1次</p></li><li><p>&quot;/&quot; 代表触发步进(step)，&quot;/&quot;前面的值代表初始值(&quot;<em>&quot;等同&quot;0&quot;)，后面的值代表偏移量，比如&quot;0/20&quot;或者&quot;</em>/20&quot;代表从0秒钟开始，每隔20秒钟触发1次，即0秒触发1次，20秒触发1次，40秒触发1次；&quot;5/20&quot;代表5秒触发1次，25秒触发1次，45秒触发1次；&quot;10-45/20&quot;代表在[10,45]内步进20秒命中的时间点触发，即10秒触发1次，30秒触发1次</p></li></ul><h2 id="分钟" tabindex="-1"><a class="header-anchor" href="#分钟"><span>分钟</span></a></h2><p>允许值范围: 0~59 ,不允许为空值，若值不合法，调度器将抛出<code>SchedulerException</code>异常</p><ul><li><p>&quot;*&quot; 代表每隔1分钟触发</p></li><li><p>&quot;,&quot; 代表在指定的分钟触发，比如&quot;10,20,40&quot;代表10分钟、20分钟和40分钟时触发任务</p></li><li><p>&quot;-&quot; 代表在指定的范围内触发，比如&quot;5-30&quot;代表从5分钟开始触发到30分钟结束触 发，每隔1分钟触发</p></li><li><p>&quot;/&quot; 代表触发步进(step)，&quot;/&quot;前面的值代表初始值(&quot;<em>&quot;等同&quot;0&quot;)，后面的值代表偏移量，比如&quot;0/25&quot;或者&quot;</em>/25&quot;代表从0分钟开始，每隔25分钟触发1次，即0分钟触发1次，第25分钟触发1次，第50分钟触发1次；&quot;5/25&quot;代表5分钟触发1次，30分钟触发1次，55分钟触发1次；&quot;10-45/20&quot;代表在[10,45]内步进20分钟命中的时间点触发，即10分钟触发1次，30分钟触发1次</p></li></ul><h2 id="小时" tabindex="-1"><a class="header-anchor" href="#小时"><span>小时</span></a></h2><p>允许值范围: 0~23 ,不允许为空值，若值不合法，调度器将抛出<code>SchedulerException</code>异常</p><ul><li><p>&quot;*&quot; 代表每隔1小时触发</p></li><li><p>&quot;,&quot; 代表在指定的时间点触发，比如&quot;10,20,23&quot;代表10点钟、20点钟和23点触发任务</p></li><li><p>&quot;-&quot; 代表在指定的时间段内触发，比如&quot;20-23&quot;代表从20点开始触发到23点结束触发，每隔1小时触发</p></li><li><p>&quot;/&quot; 代表触发步进(step)，&quot;/&quot;前面的值代表初始值(&quot;<em>&quot;等同&quot;0&quot;)，后面的值代表偏移量，比如&quot;0/1&quot;或者&quot;</em>/1&quot;代表从0点开始触发，每隔1小时触发1次；&quot;1/2&quot;代表从1点开始触发，以后每隔2小时触发一次</p></li></ul><h2 id="日期" tabindex="-1"><a class="header-anchor" href="#日期"><span>日期</span></a></h2><p>允许值范围: 1~12 (JAN-DEC),不允许为空值，若值不合法，调度器将抛出<code>SchedulerException</code>异常</p><ul><li><p>&quot;*&quot; 代表每个月都触发</p></li><li><p>&quot;,&quot; 代表在指定的月份触发，比如&quot;1,6,12&quot;代表1月份、6月份和12月份触发任务</p></li><li><p>&quot;-&quot; 代表在指定的月份范围内触发，比如&quot;1-6&quot;代表从1月份开始触发到6月份结束触发，每隔1个月触发</p></li><li><p>&quot;/&quot; 代表触发步进(step)，&quot;/&quot;前面的值代表初始值(&quot;<em>&quot;等同&quot;1&quot;)，后面的值代表偏移量，比如&quot;1/2&quot;或者&quot;</em>/2&quot;代表从1月份开始触发，每隔2个月触发1次；&quot;6/6&quot;代表从6月份开始触发，以后每隔6个月触发一次；&quot;1-6/12&quot;表达式意味着每年1月份触发</p></li><li><p>&quot;C&quot; 这个字符依靠一个指定的“日历”。也就是说这个表达式的值依赖于相关的“日历”的计算结果，如果没有“日历”关联，则等价于所有包含的“日历”。比如“5C”表示关联“日历”中第一天，或者这个月开始的第一天的后5天。</p></li></ul><h2 id="星期" tabindex="-1"><a class="header-anchor" href="#星期"><span>星期</span></a></h2><p>允许值范围: 1~7 (SUN-SAT),1代表星期天(一星期的第一天)，以此类推，7代表星期六(一星期的最后一天)，不允许为空值，若值不合法，调度器将抛出<code>SchedulerException</code>异常</p><ul><li><p>&quot;*&quot; 代表每星期都触发；</p></li><li><p>&quot;?&quot; 与{日期}互斥，即意味着若明确指定{日期}触发，则表示{星期}无意义，以免引起冲突和混乱</p></li><li><p>&quot;,&quot; 代表在指定的星期约定触发，比如&quot;1,3,5&quot;代表星期天、星期二和星期四触发</p></li><li><p>&quot;-&quot; 代表在指定的星期范围内触发，比如&quot;2-4&quot;代表从星期一开始触发到星期三结束触发，每隔1天触发</p></li><li><p>&quot;/&quot; 代表触发步进(step)，&quot;/&quot;前面的值代表初始值(&quot;<em>&quot;等同&quot;1&quot;)，后面的值代表偏移量，比如&quot;1/3&quot;或者&quot;</em>/3&quot;代表从星期天开始触发，每隔3天触发1次；&quot;1-5/2&quot;表达式意味着在[1,5]范围内，每隔2天触发，即星期天、星期二、星期四触发</p></li><li><p>&quot;L&quot; 如果{星期}占位符如果是&quot;L&quot;，即意味着星期的的最后一天触发，即星期六触发，L= 7或者 L = SAT，因此，&quot;5L&quot;意味着一个月的最后一个星期四触发</p></li><li><p>&quot;#&quot; 用来指定具体的周数，&quot;#&quot;前面代表星期，&quot;#&quot;后面代表本月第几周，比如&quot;2#2&quot;表示本月第二周的星期一，&quot;5#3&quot;表示本月第三周的星期四，因此，&quot;5L&quot;这种形式只不过是&quot;#&quot;的特殊形式而已</p></li><li><p>&quot;C&quot; 这个字符依靠一个指定的“日历”。也就是说这个表达式的值依赖于相关的“日历”的计算结果，如果没有“日历”关联，则等价于所有包含的“日历”。比如：“1C”表示关联“日历”中第一天，或者星期的第一天的后1天，也就是周日的后一天（周一）。</p></li></ul><h2 id="年份" tabindex="-1"><a class="header-anchor" href="#年份"><span>年份</span></a></h2><p>允许值范围: 1970~2099 ,允许为空，若值不合法，调度器将抛出<code>SchedulerException</code>异常</p><ul><li><p>&quot;*&quot;代表每年都触发</p></li><li><p>&quot;,&quot;代表在指定的年份才触发，比如&quot;2011,2012,2013&quot;代表2011年、2012年和2013年触发任务</p></li><li><p>&quot;-&quot;代表在指定的年份范围内触发，比如&quot;2011-2020&quot;代表从2011年开始触发到2020年结束触发，每隔1年触发</p></li><li><p>&quot;/&quot;代表触发步进(step)，&quot;/&quot;前面的值代表初始值(&quot;<em>&quot;等同&quot;1970&quot;)，后面的值代表偏移量，比如&quot;2011/2&quot;或者&quot;</em>/2&quot;代表从2011年开始触发，每隔2年触发1次</p></li></ul><blockquote><p>注意：除了{日期}和{星期}可以使用&quot;?&quot;来实现互斥，表达无意义的信息之外，其他占位符都要具有具体的时间含义，且依赖关系为：年-&gt;月-&gt;日期(星期)-&gt;小时-&gt;分钟-&gt;秒数</p></blockquote><h2 id="例子" tabindex="-1"><a class="header-anchor" href="#例子"><span>例子</span></a></h2><table><thead><tr><th><strong>示例 1</strong></th><th><strong>说明</strong></th></tr></thead><tbody><tr><td>0 15 10 ? * *</td><td>每天上午 10:15 执行任务</td></tr><tr><td>0 15 10 * * ?</td><td>每天上午 10:15 执行任务</td></tr><tr><td>0 0 12 * * ?</td><td>每天中午 12:00 执行任务</td></tr><tr><td>0 0 10,14,16 * * ?</td><td>每天上午 10:00 点、下午 14:00 以及下午 16:00 执行任务</td></tr><tr><td>0 0/30 9-17 * * ?</td><td>每天上午 09:00 到下午 17:00 时间段内每隔半小时执行任务</td></tr><tr><td>0 * 14 * * ?</td><td>每天下午 14:00 到下午 14:59 时间段内每隔 1 分钟执行任务</td></tr><tr><td>0 0-5 14 * * ?</td><td>每天下午 14:00 到下午 14:05 时间段内每隔 1 分钟执行任务</td></tr><tr><td>0 0/5 14 * * ?</td><td>每天下午 14:00 到下午 14:55 时间段内每隔 5 分钟执行任务</td></tr><tr><td>0 0/5 14,18 * * ?</td><td>每天下午 14:00 到下午 14:55、下午 18:00 到下午 18:55 时间段内每隔 5 分钟执行任务</td></tr><tr><td>0 0 12 ? * WED</td><td>每个星期三中午 12:00 执行任务</td></tr><tr><td>0 15 10 15 * ?</td><td>每月 15 日上午 10:15 执行任务</td></tr><tr><td>0 15 10 L * ?</td><td>每月最后一日上午 10:15 执行任务</td></tr><tr><td>0 15 10 ? * 6L</td><td>每月最后一个星期六上午 10:15 执行任务</td></tr><tr><td>0 15 10 ? * 6#3</td><td>每月第三个星期六上午 10:15 执行任务</td></tr><tr><td>0 10,44 14 ? 3 WED</td><td>每年 3 月的每个星期三下午 14:10 和 14:44 执行任务</td></tr></tbody></table>',33),n=[u];function l(a,i){return d(),o("div",null,n)}const c=t(r,[["render",l],["__file","cron.html.vue"]]),s=JSON.parse('{"path":"/note/utils/cron.html","title":"cron表达式","lang":"zh-CN","frontmatter":{"date":"2024-07-09T00:00:00.000Z","category":["spring"],"tags":["定时"],"description":"cron表达式 由若干数字、空格、符号按一定的规则，组成的一组字符串，从而表达时间的信息 格式 秒 分 小时 日期 月份 星期 秒 分 小时 日期 月份 星期 年(可为空) 工具 Cron 表达式主要有两类，分别是： Linux crontab 命令 （Crontab 是linux系统自带的定时任务，用于设置周期性执行的本地脚本。Crontab的cro...","head":[["meta",{"property":"og:url","content":"https://onlyone-fun/note/utils/cron.html"}],["meta",{"property":"og:site_name","content":"笔记、生活"}],["meta",{"property":"og:title","content":"cron表达式"}],["meta",{"property":"og:description","content":"cron表达式 由若干数字、空格、符号按一定的规则，组成的一组字符串，从而表达时间的信息 格式 秒 分 小时 日期 月份 星期 秒 分 小时 日期 月份 星期 年(可为空) 工具 Cron 表达式主要有两类，分别是： Linux crontab 命令 （Crontab 是linux系统自带的定时任务，用于设置周期性执行的本地脚本。Crontab的cro..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-07-09T10:07:40.000Z"}],["meta",{"property":"article:author","content":"savior"}],["meta",{"property":"article:tag","content":"定时"}],["meta",{"property":"article:published_time","content":"2024-07-09T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-07-09T10:07:40.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"cron表达式\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-07-09T00:00:00.000Z\\",\\"dateModified\\":\\"2024-07-09T10:07:40.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"savior\\",\\"url\\":\\"https://onlyone-fun.github.io\\"}]}"]]},"headers":[{"level":2,"title":"格式","slug":"格式","link":"#格式","children":[]},{"level":2,"title":"工具","slug":"工具","link":"#工具","children":[]},{"level":2,"title":"域取值","slug":"域取值","link":"#域取值","children":[]},{"level":2,"title":"特殊字符","slug":"特殊字符","link":"#特殊字符","children":[]},{"level":2,"title":"秒","slug":"秒","link":"#秒","children":[]},{"level":2,"title":"分钟","slug":"分钟","link":"#分钟","children":[]},{"level":2,"title":"小时","slug":"小时","link":"#小时","children":[]},{"level":2,"title":"日期","slug":"日期","link":"#日期","children":[]},{"level":2,"title":"星期","slug":"星期","link":"#星期","children":[]},{"level":2,"title":"年份","slug":"年份","link":"#年份","children":[]},{"level":2,"title":"例子","slug":"例子","link":"#例子","children":[]}],"git":{"createdTime":1720519660000,"updatedTime":1720519660000,"contributors":[{"name":"savior","email":"1460361323@qq.com","commits":1}]},"readingTime":{"minutes":9.79,"words":2938},"filePathRelative":"note/utils/cron.md","localizedDate":"2024年7月9日","excerpt":"\\n<blockquote>\\n<p>由若干数字、空格、符号按一定的规则，组成的一组字符串，从而表达时间的信息</p>\\n</blockquote>\\n<h2>格式</h2>\\n<ul>\\n<li><code>秒 分 小时 日期 月份 星期</code></li>\\n<li><code>秒 分 小时 日期 月份 星期 年(可为空)</code></li>\\n</ul>\\n<h2>工具</h2>\\n<p><code>Cron</code> 表达式主要有两类，分别是：</p>\\n<ul>\\n<li>\\n<p>Linux crontab 命令 （Crontab 是linux系统自带的定时任务，用于设置周期性执行的本地脚本。Crontab的cron表达式只能精确到分钟。例如，* * * * ?）</p>\\n</li>\\n<li>\\n<p>Java Quartz（Quartz 是一个完全由 Java 编写的开源作业调度框架，为 Java 应用进行任务调度提供了简单却强大的机制。Quartz的cron表达式可以精确到秒。例如，* * * * * ?）</p>\\n</li>\\n</ul>","autoDesc":true}');export{c as comp,s as data};
